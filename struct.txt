#include <stdio.h>
#include <stdlib.h>

typedef struct s_node {
    int data;
    struct s_node* prev;
    struct s_node* next;
} t_node;

//---------------------Stack---------------------

typedef struct s_stack {
    int size;
    struct s_node* head;
    struct s_node* tail;
    int top;
} t_stack;

t_node* create_node(int elm) {
    t_node* node = malloc(sizeof(t_node));
    if (!node)
      return node;
    node->data = elm;
    node->prev = NULL;
    node->next = NULL;
    return node;
}

void push(t_stack *s, int elm) {
    t_node* updated_head = create_node(elm);
    if (!s->head) {
        s->head = updated_head;
        s->tail = s->head;
    } else {
        updated_head->next = s->head;
        s->head->prev = updated_head;
        s->head = updated_head;
    }
    s->size++;
    s->top = s->head->data;
}

t_stack *init_stack ()
{
  t_stack *stack = malloc(sizeof(t_stack));
  if (!stack)
    return (NULL);
  stack->size = 0;
  stack->head = NULL;
  stack->tail = NULL;

  return (stack);
}

int main() {
    
    t_stack *s1 = init_stack();
    push(s1, 5);
    push(s1, 4);
    return 0;
}


https://codereview.stackexchange.com/questions/283294/stack-using-doubly-linked-list